p {
    margin-bottom: $paragraphMarginBottom;
    font-weight: $paragraphFontWeight;
    line-height: $paragraphLineHeight;
    color: $paragraphColor;
}

b,
strong {
    font-weight: $boldFontWeight;
}

mark {
    background-color: $markBackground;
    color: $markColor;
}

abbr[title] {
    border-bottom: 1px $abbrUnderline $baseColor;
    cursor: help;
}

sub,
sup {
    font-size: 0.7em;
    line-height: 0;
    margin-left: 0.2em;
    position: relative;
    vertical-align: baseline;
}

sub {
    bottom: -0.25em;
}

sup {
    top: -1em;
}

%heading {
    @include font(
        $family: $headingFont,
        $weight: $headingFontWeight,
        $lineHeight: $headingLineHeight
    );

    color: $headingColor;
    margin-bottom: $headingMarginBottom;
    small {
        font-weight: normal;
    }
}

@each $level, $value in $headings {
    .#{$level},
    #{$level} {
        @extend %heading;
        font-size: $value;
    }
}

small {
    font-size: $smallFontSize;
}

dfn,
em,
i,
var {
    font-style: italic;
}

blockquote,
q {
    @include font(
        $quoteFont,
        $quoteFontSize,
        $quoteFontWeight,
        $quoteLineHeight,
        $quoteFontStyle
    );

    color: $quoteColor;

    cite {
        @include font(
            $citeFont,
            $citeFontSize,
            $citeFontWeight,
            $citeLineHeight,
            $citeFontStyle
        );

        color: $citeColor;
        margin-top: $citeMarginTop;

        &:before {
            content: $citeIndicator;
        }
    }

    p {
        color: $quoteColor;
    }
}

blockquote {
    margin-bottom: $blockMarginBottom;
    padding: $quotePaddingVertical $quotePaddingHorizontal;

    cite {
        display: block;
    }
}

del,
s,
strike {
    text-decoration: line-through;
}

a {
    color: $linkColor;
    text-decoration: $linkDecoration;

    &:focus {
        outline: thin dotted;
        outline-offset: 2px;
    }

    &:hover {
        color: $linkColorHover;
        text-decoration: if($linkDecorationHover, $linkDecorationHover, null);
    }

    &:active {
        color: $linkColorActive;
    }

    img {
        border: 0;
    }
}

a:not([href]):not([class]) {
    &,
    &:hover {
        color: inherit;
        text-decoration: none;
    }
}

hr {
    border: 0;
    border-top: $ruleHeight $ruleStyle $ruleColor;
    display: block;
    height: 1px;
    margin-bottom: $ruleMargin;
    margin-top: $ruleMargin;
}

address {
    @include font(
        $addressFont,
        $addressFontSize,
        $addressFontWeight,
        $addressLineHeight,
        $addressFontStyle
    );

    color: $addressColor;
    margin-bottom: $blockMarginBottom;
}

dl,
ol,
ul {
    color: $listColor;
    line-height: $listLineHeight;
    list-style-position: $listBulletPosition;
    margin-bottom: $listMarginBottom;

    @if ($liMarginBottom != false) {
        li {
            margin-bottom: $liMarginBottom;
        }
    }
}

ol,
ul {
    @if ($listMarginLeft != false) {
        margin-left: $listMarginLeft;
    }

    ol,
    ul {
        margin-bottom: 0;
        margin-left: $nestedListMarginLeft;
    }
}

ul {
    list-style-type: $listBulletStyle;

    ul {
        list-style-type: circle;

        ul {
            list-style-type: square;
        }
    }
}

ol {
    list-style-type: decimal;
}

nav {
    ol,
    ul {
        list-style: none;
        margin: 0;

        li {
            margin-bottom: 0;
        }
    }
}

dl {
    margin-bottom: $dlMarginBottom;
}

dt {
    @include font($dtFont, $dtFontSize);

    color: $dtColor;
    margin-bottom: $dtMarginBottom;
}

dd {
    @include font($ddFont, $ddFontSize);

    color: $ddColor;
    margin-bottom: $ddMarginBottom;
}
